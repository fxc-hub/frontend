name: Frontend Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint || echo "Linting not configured"
      
    - name: Run type checking
      run: npm run type-check || echo "Type checking not configured"
      
    - name: Run tests
      run: npm test || echo "Tests not configured"

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
        
    - name: Build application
      run: npm run build -- --no-lint
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: .next/
        retention-days: 7

  deploy:
    name: Deploy to Contabo VPS
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
        
    - name: Build application
      run: npm run build -- --no-lint

    - name: Copy files to VPS
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: 22
        source: "."
        target: "/home/fxc-hub.com/public_html"
        strip_components: 0
        
    - name: Deploy to VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: 22
        script: |
          echo "Starting frontend deployment to main domain..."
          
          # Navigate to main domain directory
          cd /home/fxc-hub.com/public_html
          
          # Backup current content
          if [ -d "backup-$(date +%Y%m%d)" ]; then
            echo "Backup directory already exists, skipping backup"
          else
            echo "Creating backup of current content..."
            cp -r . backup-$(date +%Y%m%d)
          fi
          
          # Stop current PM2 process if running
          if pm2 list | grep -q "frontend"; then
            echo "Stopping existing PM2 frontend process..."
            pm2 stop frontend
            pm2 delete frontend
          fi
          
          # Remove current content (except backup)
          echo "Clearing current content..."
          find . -maxdepth 1 ! -name '.' ! -name 'backup-*' -exec rm -rf {} +
          
          # Files are copied by the scp-action
          echo "Files copied from GitHub repository"
          
          # Verify files are present
          echo "Verifying files..."
          if [ ! -f "package.json" ]; then
            echo "❌ package.json not found - deployment failed"
            exit 1
          fi
          echo "✅ package.json found"
          
          # Install dependencies
          echo "Installing dependencies..."
          npm ci --production
          
          # Build the application
          echo "Building application..."
          npm run build -- --no-lint
          
          # Start PM2 process on port 3001
          echo "Starting PM2 frontend process..."
          PORT=3001 pm2 start npm --name "frontend" -- start
          pm2 save
          
          # Show PM2 status
          pm2 list
          
          # Test the deployment
          echo "Testing deployment..."
          sleep 5
          if curl -s http://localhost:3001 > /dev/null; then
            echo "✅ Deployment successful - server is responding"
          else
            echo "❌ Deployment failed - server not responding"
            echo "📋 PM2 Logs:"
            pm2 logs frontend --lines 10
          fi
          
          echo "Frontend deployment to main domain completed successfully!"